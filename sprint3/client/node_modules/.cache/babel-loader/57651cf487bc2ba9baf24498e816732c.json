{"ast":null,"code":"var _jsxFileName = \"/Users/Daniel/Desktop/BrainStation/BrainFlix/sprint2/src/App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/header\";\nimport Comments from \"./components/comments\";\nimport Conversation from \"./components/conversation\";\nimport Video from \"./components/video\";\nimport VideoInfo from \"./components/videoInfo\";\nimport VideoList from \"./components/videoList\";\nimport \"./styles/main.css\";\nimport VideoControls from \"./components/videoControls\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n$url = \"https://project-2-api.herokuapp.com/videos\";\n$key = \"?api_key=Daniel\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: [],\n      mainVideo: {}\n    };\n  }\n\n  componentDidMount() {\n    axios.get($url + $key).then(response => {\n      const videos = response.data;\n      this.setState({\n        videos\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: props => {\n        return React.createElement(React.Fragment, null, React.createElement(Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }), React.createElement(\"main\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"mainVideo-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(Video, {\n          mainVideo: this.state.mainVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }), React.createElement(VideoControls, {\n          mainVideo: this.state.mainVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"desktop-view\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"desktop-view__left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"desktop-view__right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(VideoList, {\n          videoList: this.state.videos,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        })))));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `/${this.state.mainVideo.id}`,\n      exact: true,\n      render: props => {\n        return React.createElement(React.Fragment, null, React.createElement(Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }), React.createElement(\"main\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"mainVideo-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(Video, {\n          mainVideo: this.state.mainVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }), React.createElement(VideoControls, {\n          mainVideo: this.state.mainVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"desktop-view\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"desktop-view__left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"desktop-view__right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(VideoList, {\n          videoList: this.state.videos,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        })))));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Route, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;\n/**\n * Functional Requirements\nClicking the BrainFlix Logo must link back to the home page.\nThere must be 3 routes:\nThe Home/Video Player Page for displaying the details of a video.\nThe Video Upload Page.\nA route which will load the video with the provided video id to be displayed using the Video Player Page.\nClicking on a video in the “Next Video” list must go to the Video Details Page for the selected video and display all the information for the video such as (likes, views, author, etc).\nClicking on the “Upload” button must link to the Video Upload Page.\n//https://project-2-api.herokuapp.com/videos?api_key=Daniel\n\n        <main>\n          <div className=\"mainVideo-container\">\n            <Video />\n            <VideoControls />\n          </div>\n          <div className=\"desktop-view\">\n            <div className=\"desktop-view__left\">\n              <VideoInfo />\n              <Conversation />\n              <Comments />\n            </div>\n            <div className=\"desktop-view__right\">\n              <VideoList />\n            </div>\n          </div>\n        </main>\n\n\n\n        <Header />\n        <main>\n          <div className=\"mainVideo-container\">\n            <Video />\n            <VideoControls />\n          </div>\n          <div className=\"desktop-view\">\n            <div className=\"desktop-view__left\">\n              <VideoInfo />\n              <Conversation />\n              <Comments />\n            </div>\n            <VideoList videoList={this.state.sideVideos} />\n          </div>\n        </main>\n */","map":{"version":3,"sources":["/Users/Daniel/Desktop/BrainStation/BrainFlix/sprint2/src/App.js"],"names":["React","Component","Header","Comments","Conversation","Video","VideoInfo","VideoList","VideoControls","axios","BrowserRouter","Router","Route","Switch","Link","$url","$key","App","state","videos","mainVideo","componentDidMount","get","then","response","data","setState","render","props","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./components/header\";\nimport Comments from \"./components/comments\";\nimport Conversation from \"./components/conversation\";\nimport Video from \"./components/video\";\nimport VideoInfo from \"./components/videoInfo\";\nimport VideoList from \"./components/videoList\";\nimport \"./styles/main.css\";\nimport VideoControls from \"./components/videoControls\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n$url = \"https://project-2-api.herokuapp.com/videos\";\n$key = \"?api_key=Daniel\";\n\nclass App extends Component {\n  state = {\n    videos: [],\n    mainVideo: {}\n  };\n\n  componentDidMount() {\n    axios.get($url + $key).then(response => {\n      const videos = response.data;\n      this.setState({ videos });\n    });\n  }\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={props => {\n              return (\n                <>\n                  <Header />\n                  <main>\n                    <div className=\"mainVideo-container\">\n                      <Video mainVideo={this.state.mainVideo} />\n                      <VideoControls mainVideo={this.state.mainVideo} />\n                    </div>\n                    <div className=\"desktop-view\">\n                      <div className=\"desktop-view__left\"></div>\n                      <div className=\"desktop-view__right\">\n                        <VideoList videoList={this.state.videos} />\n                      </div>\n                    </div>\n                  </main>\n                </>\n              );\n            }}\n          />\n          <Route\n            path={`/${this.state.mainVideo.id}`}\n            exact\n            render={props => {\n              return (\n                <>\n                  <Header />\n                  <main>\n                    <div className=\"mainVideo-container\">\n                      <Video mainVideo={this.state.mainVideo} />\n                      <VideoControls mainVideo={this.state.mainVideo} />\n                    </div>\n                    <div className=\"desktop-view\">\n                      <div className=\"desktop-view__left\"></div>\n                      <div className=\"desktop-view__right\">\n                        <VideoList videoList={this.state.videos} />\n                      </div>\n                    </div>\n                  </main>\n                </>\n              );\n            }}\n          />\n          <Route />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n/**\n * Functional Requirements\nClicking the BrainFlix Logo must link back to the home page.\nThere must be 3 routes:\nThe Home/Video Player Page for displaying the details of a video.\nThe Video Upload Page.\nA route which will load the video with the provided video id to be displayed using the Video Player Page.\nClicking on a video in the “Next Video” list must go to the Video Details Page for the selected video and display all the information for the video such as (likes, views, author, etc).\nClicking on the “Upload” button must link to the Video Upload Page.\n//https://project-2-api.herokuapp.com/videos?api_key=Daniel\n\n        <main>\n          <div className=\"mainVideo-container\">\n            <Video />\n            <VideoControls />\n          </div>\n          <div className=\"desktop-view\">\n            <div className=\"desktop-view__left\">\n              <VideoInfo />\n              <Conversation />\n              <Comments />\n            </div>\n            <div className=\"desktop-view__right\">\n              <VideoList />\n            </div>\n          </div>\n        </main>\n\n\n\n        <Header />\n        <main>\n          <div className=\"mainVideo-container\">\n            <Video />\n            <VideoControls />\n          </div>\n          <div className=\"desktop-view\">\n            <div className=\"desktop-view__left\">\n              <VideoInfo />\n              <Conversation />\n              <Comments />\n            </div>\n            <VideoList videoList={this.state.sideVideos} />\n          </div>\n        </main>\n */\n"]},"metadata":{},"sourceType":"module"}