{"ast":null,"code":"var _jsxFileName = \"/Users/Daniel/Desktop/BrainStation/BrainFlix/sprint3/src/App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/header\";\nimport Comments from \"./components/comments\";\nimport Conversation from \"./components/conversation\";\nimport Video from \"./components/video\";\nimport VideoInfo from \"./components/videoInfo\";\nimport VideoList from \"./components/videoList\";\nimport VideoControls from \"./components/videoControls\";\nimport Upload from \"./components/upload\";\nimport axios from \"axios\";\nimport \"./styles/main.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nconst $url = \"https://project-2-api.herokuapp.com/videos/\";\nconst $key = \"?api_key=Daniel\";\nconst $homeKey = \"1af0jruup5gu\";\n\nconst fs = require(\"fs\");\n\nconst videoLists = __dirname + \"./models/videoList.json\";\n\nconst videoss = require(videoLists);\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videoList: [],\n      mainVideo: {},\n      commentCount: 0,\n      comments: [],\n      mainVideoId: $homeKey\n    };\n\n    this.getMainVideo = () => {\n      axios.get(`${$url}${this.state.mainVideoId}${$key}`).then(response => {\n        const mainVideo = response.data;\n        this.setState({\n          mainVideo\n        });\n        this.setState({\n          commentCount: mainVideo.comments.length\n        });\n        this.setState({\n          comments: mainVideo.comments\n        });\n      });\n    };\n\n    this.eventHandler = event => {\n      event.preventDefault();\n      const comments = event.target.commentInput.value;\n\n      if (comments !== \"\") {\n        axios.post(`${$url}${this.state.mainVideoId}/comments${$key}`, {\n          comment: comments,\n          name: \"Daniel Kim\"\n        }).then(response => {\n          this.getMainVideo();\n        });\n        event.target.reset();\n      } else {\n        window.alert(\"Please type comments\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get($url + $key).then(response => {\n      fs.writeFileSync(videoLists, JSON.stringify(response.data), \"utf8\", err => {\n        if (err) {\n          console.log(err);\n        }\n      });\n      this.setState({\n        videoList: response.data\n      });\n      this.getMainVideo();\n    });\n  }\n\n  componentDidUpdate(prevProp, prevState) {\n    if (prevState.mainVideoId !== this.state.mainVideoId) {\n      this.getMainVideo();\n    }\n  }\n\n  // postVideo = event => {\n  //   event.preventDefault();\n  //   const title = event.target.video-title.value;\n  //   const description = event.target.video-desc.value;\n  //   if (title !== \"\" && description !== \"\") {\n  //     axios\n  //       .post(`${$url}${this.state.mainVideoId}${$key}`, {\n  //         title: title,\n  //         channel: \"Dainel Kim\",\n  //         image: \"https://i.imgur.com/l2Xfgpl.jpg\",\n  //         description: descirption,\n  //         name: \"Daniel Kim\",\n  //         timestamp: new Date().getTime(),\n  //         views: 0,\n  //         likes: 0,\n  //         comments: [\n  //           {\n  //             name: \"Micheal Lyons\",\n  //             comment:\n  //               \"They BLEW the ROOF off at their last show, once everyone started figuring out they were going. This is still simply the greatest opening of acconcert I have EVER witnessed.\",\n  //             id: \"1ab6d9f6-da38-456e-9b09-ab0acd9ce818\",\n  //             likes: 0,\n  //             timestamp: 1545162149000\n  //           },\n  //           {\n  //             name: \"Gary Wong\",\n  //             comment:\n  //               \"Every time I see him shred I feel so motivated to get off my couch and hop on my board. He’s so talented! I wish I can ride like him one day so I can really enjoy myself!\",\n  //             id: \"cc6f173d-9e9d-4501-918d-bc11f15a8e14\",\n  //             likes: 0,\n  //             timestamp: 1544595784046\n  //           },\n  //           {\n  //             name: \"Theodore Duncan\",\n  //             comment:\n  //               \"How can someone be so good!!! You can tell he lives for this and loves to do it every day. Everytime I see him I feel instantly happy! He’s definitely my favorite ever!\",\n  //             id: \"993f950f-df99-48e7-bd1e-d95003cc98f1\",\n  //             likes: 0,\n  //             timestamp: 1542262984046\n  //           }\n  //         ]\n  //       })\n  //       .then(response => {\n  //         this.getMainVideo();\n  //       });\n  //     event.target.reset();\n  //   } else {\n  //     window.alert(\"Please type both title and description of video\");\n  //   }\n  // };\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/upload\",\n      render: () => {\n        return React.createElement(\"main\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(Upload, {\n          postVideo: this.postVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/:id\",\n      render: props => {\n        if (props.match.params.id !== this.state.mainVideoId) {\n          this.setState({\n            mainVideoId: props.match.params.id\n          });\n        }\n\n        return React.createElement(\"main\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"mainVideo-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, React.createElement(Video, {\n          mainVideo: this.state.mainVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }), React.createElement(VideoControls, {\n          mainVideo: this.state.mainVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"desktop-view\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"desktop-view__left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, React.createElement(VideoInfo, {\n          mainVideo: this.state.mainVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }), React.createElement(Conversation, {\n          commentCount: this.state.commentCount,\n          onSubmit: this.eventHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }), React.createElement(Comments, {\n          comments: this.state.comments,\n          mainVideoId: this.state.mainVideoId,\n          deleteHandler: this.getMainVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"desktop-view__right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(VideoList, {\n          videoList: this.state.videoList,\n          mainVideoId: this.state.mainVideoId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }))));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: () => {\n        if ($homeKey !== this.state.mainVideoId) {\n          this.setState({\n            mainVideoId: $homeKey\n          });\n        }\n\n        return React.createElement(\"main\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"mainVideo-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, React.createElement(Video, {\n          mainVideo: this.state.mainVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }), React.createElement(VideoControls, {\n          mainVideo: this.state.mainVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"desktop-view\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"desktop-view__left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, React.createElement(VideoInfo, {\n          mainVideo: this.state.mainVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }), React.createElement(Conversation, {\n          commentCount: this.state.commentCount,\n          onSubmit: this.eventHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }), React.createElement(Comments, {\n          comments: this.state.comments,\n          mainVideoId: this.state.mainVideoId,\n          deleteHandler: this.getMainVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"desktop-view__right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, React.createElement(VideoList, {\n          videoList: this.state.videoList,\n          mainVideoId: this.state.mainVideoId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }))));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Daniel/Desktop/BrainStation/BrainFlix/sprint3/src/App.js"],"names":["React","Component","Header","Comments","Conversation","Video","VideoInfo","VideoList","VideoControls","Upload","axios","BrowserRouter","Router","Route","Switch","$url","$key","$homeKey","fs","require","videoLists","__dirname","videoss","App","state","videoList","mainVideo","commentCount","comments","mainVideoId","getMainVideo","get","then","response","data","setState","length","eventHandler","event","preventDefault","target","commentInput","value","post","comment","name","reset","window","alert","componentDidMount","writeFileSync","JSON","stringify","err","console","log","componentDidUpdate","prevProp","prevState","render","postVideo","props","match","params","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./components/header\";\nimport Comments from \"./components/comments\";\nimport Conversation from \"./components/conversation\";\nimport Video from \"./components/video\";\nimport VideoInfo from \"./components/videoInfo\";\nimport VideoList from \"./components/videoList\";\nimport VideoControls from \"./components/videoControls\";\nimport Upload from \"./components/upload\";\nimport axios from \"axios\";\nimport \"./styles/main.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nconst $url = \"https://project-2-api.herokuapp.com/videos/\";\nconst $key = \"?api_key=Daniel\";\nconst $homeKey = \"1af0jruup5gu\";\nconst fs = require(\"fs\");\nconst videoLists = __dirname + \"./models/videoList.json\";\nconst videoss = require(videoLists);\n\nclass App extends Component {\n  state = {\n    videoList: [],\n    mainVideo: {},\n    commentCount: 0,\n    comments: [],\n    mainVideoId: $homeKey\n  };\n\n  componentDidMount() {\n    axios.get($url + $key).then(response => {\n      fs.writeFileSync(\n        videoLists,\n        JSON.stringify(response.data),\n        \"utf8\",\n        err => {\n          if (err) {\n            console.log(err);\n          }\n        }\n      );\n      this.setState({ videoList: response.data });\n      this.getMainVideo();\n    });\n  }\n\n  componentDidUpdate(prevProp, prevState) {\n    if (prevState.mainVideoId !== this.state.mainVideoId) {\n      this.getMainVideo();\n    }\n  }\n\n  getMainVideo = () => {\n    axios.get(`${$url}${this.state.mainVideoId}${$key}`).then(response => {\n      const mainVideo = response.data;\n      this.setState({ mainVideo });\n      this.setState({ commentCount: mainVideo.comments.length });\n      this.setState({ comments: mainVideo.comments });\n    });\n  };\n\n  eventHandler = event => {\n    event.preventDefault();\n    const comments = event.target.commentInput.value;\n    if (comments !== \"\") {\n      axios\n        .post(`${$url}${this.state.mainVideoId}/comments${$key}`, {\n          comment: comments,\n          name: \"Daniel Kim\"\n        })\n        .then(response => {\n          this.getMainVideo();\n        });\n      event.target.reset();\n    } else {\n      window.alert(\"Please type comments\");\n    }\n  };\n\n  // postVideo = event => {\n  //   event.preventDefault();\n  //   const title = event.target.video-title.value;\n  //   const description = event.target.video-desc.value;\n  //   if (title !== \"\" && description !== \"\") {\n  //     axios\n  //       .post(`${$url}${this.state.mainVideoId}${$key}`, {\n  //         title: title,\n  //         channel: \"Dainel Kim\",\n  //         image: \"https://i.imgur.com/l2Xfgpl.jpg\",\n  //         description: descirption,\n  //         name: \"Daniel Kim\",\n  //         timestamp: new Date().getTime(),\n  //         views: 0,\n  //         likes: 0,\n  //         comments: [\n  //           {\n  //             name: \"Micheal Lyons\",\n  //             comment:\n  //               \"They BLEW the ROOF off at their last show, once everyone started figuring out they were going. This is still simply the greatest opening of acconcert I have EVER witnessed.\",\n  //             id: \"1ab6d9f6-da38-456e-9b09-ab0acd9ce818\",\n  //             likes: 0,\n  //             timestamp: 1545162149000\n  //           },\n  //           {\n  //             name: \"Gary Wong\",\n  //             comment:\n  //               \"Every time I see him shred I feel so motivated to get off my couch and hop on my board. He’s so talented! I wish I can ride like him one day so I can really enjoy myself!\",\n  //             id: \"cc6f173d-9e9d-4501-918d-bc11f15a8e14\",\n  //             likes: 0,\n  //             timestamp: 1544595784046\n  //           },\n  //           {\n  //             name: \"Theodore Duncan\",\n  //             comment:\n  //               \"How can someone be so good!!! You can tell he lives for this and loves to do it every day. Everytime I see him I feel instantly happy! He’s definitely my favorite ever!\",\n  //             id: \"993f950f-df99-48e7-bd1e-d95003cc98f1\",\n  //             likes: 0,\n  //             timestamp: 1542262984046\n  //           }\n  //         ]\n  //       })\n  //       .then(response => {\n  //         this.getMainVideo();\n  //       });\n  //     event.target.reset();\n  //   } else {\n  //     window.alert(\"Please type both title and description of video\");\n  //   }\n  // };\n\n  render() {\n    return (\n      <Router>\n        <Header />\n        <Switch>\n          <Route\n            path=\"/upload\"\n            render={() => {\n              return (\n                <main>\n                  <Upload postVideo={this.postVideo} />\n                </main>\n              );\n            }}\n          />\n          <Route\n            path=\"/:id\"\n            render={props => {\n              if (props.match.params.id !== this.state.mainVideoId) {\n                this.setState({ mainVideoId: props.match.params.id });\n              }\n              return (\n                <main>\n                  <div className=\"mainVideo-container\">\n                    <Video mainVideo={this.state.mainVideo} />\n                    <VideoControls mainVideo={this.state.mainVideo} />\n                  </div>\n                  <div className=\"desktop-view\">\n                    <div className=\"desktop-view__left\">\n                      <VideoInfo mainVideo={this.state.mainVideo} />\n                      <Conversation\n                        commentCount={this.state.commentCount}\n                        onSubmit={this.eventHandler}\n                      />\n                      <Comments\n                        comments={this.state.comments}\n                        mainVideoId={this.state.mainVideoId}\n                        deleteHandler={this.getMainVideo}\n                      />\n                    </div>\n                    <div className=\"desktop-view__right\">\n                      <VideoList\n                        videoList={this.state.videoList}\n                        mainVideoId={this.state.mainVideoId}\n                      />\n                    </div>\n                  </div>\n                </main>\n              );\n            }}\n          />\n          <Route\n            path=\"/\"\n            exact\n            render={() => {\n              if ($homeKey !== this.state.mainVideoId) {\n                this.setState({ mainVideoId: $homeKey });\n              }\n              return (\n                <main>\n                  <div className=\"mainVideo-container\">\n                    <Video mainVideo={this.state.mainVideo} />\n                    <VideoControls mainVideo={this.state.mainVideo} />\n                  </div>\n                  <div className=\"desktop-view\">\n                    <div className=\"desktop-view__left\">\n                      <VideoInfo mainVideo={this.state.mainVideo} />\n                      <Conversation\n                        commentCount={this.state.commentCount}\n                        onSubmit={this.eventHandler}\n                      />\n                      <Comments\n                        comments={this.state.comments}\n                        mainVideoId={this.state.mainVideoId}\n                        deleteHandler={this.getMainVideo}\n                      />\n                    </div>\n                    <div className=\"desktop-view__right\">\n                      <VideoList\n                        videoList={this.state.videoList}\n                        mainVideoId={this.state.mainVideoId}\n                      />\n                    </div>\n                  </div>\n                </main>\n              );\n            }}\n          />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}