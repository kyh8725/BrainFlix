{"ast":null,"code":"var _jsxFileName = \"/Users/Daniel/Desktop/BrainStation/BrainFlix/sprint2/src/App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/header\";\nimport Comments from \"./components/comments\";\nimport Conversation from \"./components/conversation\";\nimport Video from \"./components/video\";\nimport VideoInfo from \"./components/videoInfo\";\nimport VideoList from \"./components/videoList\";\nimport \"./styles/main.css\";\nimport VideoControls from \"./components/videoControls\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\"; //Main Video Object\n\nconst mainVideo = {\n  id: \"id type of string\",\n  title: \"BMX Rampage: 2018 Highlights\",\n  description: \"On a gusty day in Southern Utah, a group of 25 daring mountain bikers blew the doors off what is possible on two wheels, unleashing some of the biggest moments the sport has ever seen. While mother nature only allowed for one full run before the conditions made it impossible to ride, that was all that was needed for event veteran Kyle Strait, who won the event for the second time -- eight years after his first Red Cow Rampage title\",\n  channel: \"By Red Cow\",\n  image: \"/Images/video-list-0.jpg\",\n  views: \"1,001,023\",\n  likes: \"110,985\",\n  duration: \"42\",\n  video: \"/Images/video-list-0.jpg\",\n  timestamp: \"1545120000000\",\n  comments: \"[]\"\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sideVideos: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://project-2-api.herokuapp.com/videos?api_key=Daniel\").then(response => {\n      //const sideVideos = response.data;\n      this.setState({\n        sideVideos: response.data\n      });\n    });\n  }\n\n  render() {\n    console.log(sideVideos);\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Route, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mainVideo-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Video, {\n      mainVideo: mainVideo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(VideoControls, {\n      mainVideo: mainVideo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"desktop-view\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"desktop-view__left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(VideoInfo, {\n      mainVideo: mainVideo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Conversation, {\n      comments: comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Comments, {\n      comments: sideVideos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"desktop-view__right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(VideoList, {\n      videoList: sideVideos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;\n/**\n * Functional Requirements\nClicking the BrainFlix Logo must link back to the home page.\nThere must be 3 routes:\nThe Home/Video Player Page for displaying the details of a video.\nThe Video Upload Page.\nA route which will load the video with the provided video id to be displayed using the Video Player Page.\nClicking on a video in the “Next Video” list must go to the Video Details Page for the selected video and display all the information for the video such as (likes, views, author, etc).\nClicking on the “Upload” button must link to the Video Upload Page.\n//https://project-2-api.herokuapp.com/videos?api_key=Daniel\n\n        <main>\n          <div className=\"mainVideo-container\">\n            <Video />\n            <VideoControls />\n          </div>\n          <div className=\"desktop-view\">\n            <div className=\"desktop-view__left\">\n              <VideoInfo />\n              <Conversation />\n              <Comments />\n            </div>\n            <div className=\"desktop-view__right\">\n              <VideoList />\n            </div>\n          </div>\n        </main>\n */","map":{"version":3,"sources":["/Users/Daniel/Desktop/BrainStation/BrainFlix/sprint2/src/App.js"],"names":["React","Component","Header","Comments","Conversation","Video","VideoInfo","VideoList","VideoControls","axios","BrowserRouter","Router","Route","Switch","Link","mainVideo","id","title","description","channel","image","views","likes","duration","video","timestamp","comments","App","state","sideVideos","componentDidMount","get","then","response","setState","data","render","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./components/header\";\nimport Comments from \"./components/comments\";\nimport Conversation from \"./components/conversation\";\nimport Video from \"./components/video\";\nimport VideoInfo from \"./components/videoInfo\";\nimport VideoList from \"./components/videoList\";\nimport \"./styles/main.css\";\nimport VideoControls from \"./components/videoControls\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\n//Main Video Object\nconst mainVideo = {\n  id: \"id type of string\",\n  title: \"BMX Rampage: 2018 Highlights\",\n  description:\n    \"On a gusty day in Southern Utah, a group of 25 daring mountain bikers blew the doors off what is possible on two wheels, unleashing some of the biggest moments the sport has ever seen. While mother nature only allowed for one full run before the conditions made it impossible to ride, that was all that was needed for event veteran Kyle Strait, who won the event for the second time -- eight years after his first Red Cow Rampage title\",\n  channel: \"By Red Cow\",\n  image: \"/Images/video-list-0.jpg\",\n  views: \"1,001,023\",\n  likes: \"110,985\",\n  duration: \"42\",\n  video: \"/Images/video-list-0.jpg\",\n  timestamp: \"1545120000000\",\n  comments: \"[]\"\n};\n\nclass App extends Component {\n  state = {\n    sideVideos: []\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"https://project-2-api.herokuapp.com/videos?api_key=Daniel\")\n      .then(response => {\n        //const sideVideos = response.data;\n        this.setState({ sideVideos: response.data });\n      });\n  }\n\n  render() {\n    console.log(sideVideos);\n    return (\n      <Router>\n        <Header />\n        <Route />\n        <main>\n          <div className=\"mainVideo-container\">\n            <Video mainVideo={mainVideo} />\n            <VideoControls mainVideo={mainVideo} />\n          </div>\n          <div className=\"desktop-view\">\n            <div className=\"desktop-view__left\">\n              <VideoInfo mainVideo={mainVideo} />\n              <Conversation comments={comments} />\n              <Comments comments={sideVideos} />\n            </div>\n            <div className=\"desktop-view__right\">\n              <VideoList videoList={sideVideos} />\n            </div>\n          </div>\n        </main>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n/**\n * Functional Requirements\nClicking the BrainFlix Logo must link back to the home page.\nThere must be 3 routes:\nThe Home/Video Player Page for displaying the details of a video.\nThe Video Upload Page.\nA route which will load the video with the provided video id to be displayed using the Video Player Page.\nClicking on a video in the “Next Video” list must go to the Video Details Page for the selected video and display all the information for the video such as (likes, views, author, etc).\nClicking on the “Upload” button must link to the Video Upload Page.\n//https://project-2-api.herokuapp.com/videos?api_key=Daniel\n\n        <main>\n          <div className=\"mainVideo-container\">\n            <Video />\n            <VideoControls />\n          </div>\n          <div className=\"desktop-view\">\n            <div className=\"desktop-view__left\">\n              <VideoInfo />\n              <Conversation />\n              <Comments />\n            </div>\n            <div className=\"desktop-view__right\">\n              <VideoList />\n            </div>\n          </div>\n        </main>\n */\n"]},"metadata":{},"sourceType":"module"}