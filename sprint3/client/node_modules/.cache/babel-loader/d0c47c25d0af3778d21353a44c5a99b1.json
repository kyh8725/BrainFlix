{"ast":null,"code":"var _jsxFileName = \"/Users/Daniel/Desktop/BrainStation/BrainFlix/sprint2/src/App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/header\";\nimport Comments from \"./components/comments\";\nimport Conversation from \"./components/conversation\";\nimport Video from \"./components/video\";\nimport VideoInfo from \"./components/videoInfo\";\nimport VideoList from \"./components/videoList\";\nimport \"./styles/main.css\";\nimport VideoControls from \"./components/videoControls\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nconst $url = \"https://project-2-api.herokuapp.com/videos/\";\nconst $key = \"?api_key=Daniel\";\nconst $homeKey = \"1af0jruup5gu\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videoList: [],\n      mainVideo: {},\n      commentCount: 0,\n      comments: [],\n      mainVideoId: $homeKey\n    };\n\n    this.getMainVideo = mainVideoId => {\n      axios.get(`${$url}${mainVideoId}${$key}`).then(response => {\n        if (response.data.id === this.state.mainVideoId) {\n          const mainVideo = response.data;\n          this.setState({\n            mainVideo\n          });\n          this.setState({\n            commentCount: mainVideo.comments.length\n          });\n          this.setState({\n            comments: mainVideo.comments\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get($url + $key).then(response => {\n      this.setState({\n        videoList: response.data\n      }); //   response.data.map(video => {\n      //     axios.get(`${$url}${video.id}${$key}`).then(response => {\n      //       if (response.data.id === this.state.mainVideoId) {\n      //         const mainVideo = response.data;\n      //         this.setState({ mainVideo });\n      //         this.setState({ commentCount: mainVideo.comments.length });\n      //         this.setState({ comments: mainVideo.comments });\n      //       }\n      //     });\n      //   });\n    });\n  }\n\n  //componentDidUpdate(prevProps, prevState) {}\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: () => {\n        return React.createElement(React.Fragment, null, React.createElement(Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }), React.createElement(\"main\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"mainVideo-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(Video, {\n          mainVideo: this.state.mainVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }), React.createElement(VideoControls, {\n          mainVideo: this.state.mainVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"desktop-view\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"desktop-view__left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(VideoInfo, {\n          mainVideo: this.state.mainVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }), React.createElement(Conversation, {\n          commentCount: this.state.commentCount,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }), React.createElement(Comments, {\n          comments: this.state.comments,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"desktop-view__right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(VideoList, {\n          videoList: this.state.videoList,\n          mainVideoId: this.state.mainVideoId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        })))));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/:id\",\n      render: props => {\n        const video = this.state.videoList.find(video => {\n          return props.match.params.id === video.id;\n        });\n        return React.createElement(React.Fragment, null, React.createElement(Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }), React.createElement(\"main\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"mainVideo-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(Video, {\n          mainVideo: this.state.mainVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }), React.createElement(VideoControls, {\n          mainVideo: this.state.mainVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"desktop-view\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"desktop-view__left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(VideoInfo, {\n          mainVideo: this.state.mainVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }), React.createElement(Conversation, {\n          commentCount: this.state.commentCount,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }), React.createElement(Comments, {\n          comments: this.state.comments,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"desktop-view__right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(VideoList, {\n          videoList: this.state.videoList,\n          mainVideoId: this.state.mainVideoId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        })))));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;\n/**\n * Functional Requirements\nClicking the BrainFlix Logo must link back to the home page.\nThere must be 3 routes:\nThe Home/Video Player Page for displaying the details of a video.\nThe Video Upload Page.\nA route which will load the video with the provided video id to be displayed using the Video Player Page.\nClicking on a video in the “Next Video” list must go to the Video Details Page for the selected video and display all the information for the video such as (likes, views, author, etc).\nClicking on the “Upload” button must link to the Video Upload Page.\n\n\nconst Home = () => <h1>Home</h1>;\nconst Images = props => {\n  const images = props.images.map(image => (\n    <Link to={`images/${image.id}`} key={image.id}>\n      <img src={image.url} alt={image.title} />\n    </Link>\n  ));\n  return images;\n};\nconst ImageDetails = props => (\n  <div>\n    <img src={props.url} alt={props.title} />\n    <h2>{props.title}</h2>\n  </div>\n);\n\nclass App extends Component {\n  state = {\n    images: [\n      {\n        id: \"1\",\n        title: \"Image 1\",\n        url: \"https://i.picsum.photos/id/237/200/300.jpg\"\n      },\n      {\n        id: \"2\",\n        title: \"Image 2\",\n        url: \"https://i.picsum.photos/id/238/200/300.jpg\"\n      },\n      {\n        id: \"3\",\n        title: \"Image 3\",\n        url: \"https://i.picsum.photos/id/239/200/300.jpg\"\n      }\n    ]\n  };\n  render() {\n    return (\n      <Router>\n        <Link to=\"/images\">Images</Link>\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route\n            path=\"/images\"\n            exact\n            render={() => <Images images={this.state.images} />}\n          />\n          <Route\n            path=\"/images/:id\"\n            render={props => {\n              const image = this.state.images.find(image => {\n                return props.match.params.id === image.id;\n              });\n              return <ImageDetails title={image.title} url={image.url} />;\n            }}\n          />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n\n */","map":{"version":3,"sources":["/Users/Daniel/Desktop/BrainStation/BrainFlix/sprint2/src/App.js"],"names":["React","Component","Header","Comments","Conversation","Video","VideoInfo","VideoList","VideoControls","axios","BrowserRouter","Router","Route","Switch","$url","$key","$homeKey","App","state","videoList","mainVideo","commentCount","comments","mainVideoId","getMainVideo","get","then","response","data","id","setState","length","componentDidMount","render","props","video","find","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./components/header\";\nimport Comments from \"./components/comments\";\nimport Conversation from \"./components/conversation\";\nimport Video from \"./components/video\";\nimport VideoInfo from \"./components/videoInfo\";\nimport VideoList from \"./components/videoList\";\nimport \"./styles/main.css\";\nimport VideoControls from \"./components/videoControls\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nconst $url = \"https://project-2-api.herokuapp.com/videos/\";\nconst $key = \"?api_key=Daniel\";\nconst $homeKey = \"1af0jruup5gu\";\n\nclass App extends Component {\n  state = {\n    videoList: [],\n    mainVideo: {},\n    commentCount: 0,\n    comments: [],\n    mainVideoId: $homeKey\n  };\n\n  componentDidMount() {\n    axios.get($url + $key).then(response => {\n      this.setState({ videoList: response.data });\n      //   response.data.map(video => {\n      //     axios.get(`${$url}${video.id}${$key}`).then(response => {\n      //       if (response.data.id === this.state.mainVideoId) {\n      //         const mainVideo = response.data;\n      //         this.setState({ mainVideo });\n      //         this.setState({ commentCount: mainVideo.comments.length });\n      //         this.setState({ comments: mainVideo.comments });\n      //       }\n      //     });\n      //   });\n    });\n  }\n  getMainVideo = mainVideoId => {\n    axios.get(`${$url}${mainVideoId}${$key}`).then(response => {\n      if (response.data.id === this.state.mainVideoId) {\n        const mainVideo = response.data;\n        this.setState({ mainVideo });\n        this.setState({ commentCount: mainVideo.comments.length });\n        this.setState({ comments: mainVideo.comments });\n      }\n    });\n  };\n\n  //componentDidUpdate(prevProps, prevState) {}\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={() => {\n              return (\n                <>\n                  <Header />\n                  <main>\n                    <div className=\"mainVideo-container\">\n                      <Video mainVideo={this.state.mainVideo} />\n                      <VideoControls mainVideo={this.state.mainVideo} />\n                    </div>\n                    <div className=\"desktop-view\">\n                      <div className=\"desktop-view__left\">\n                        <VideoInfo mainVideo={this.state.mainVideo} />\n                        <Conversation commentCount={this.state.commentCount} />\n                        <Comments comments={this.state.comments} />\n                      </div>\n                      <div className=\"desktop-view__right\">\n                        <VideoList\n                          videoList={this.state.videoList}\n                          mainVideoId={this.state.mainVideoId}\n                        />\n                      </div>\n                    </div>\n                  </main>\n                </>\n              );\n            }}\n          />\n          <Route\n            path=\"/:id\"\n            render={props => {\n              const video = this.state.videoList.find(video => {\n                return props.match.params.id === video.id;\n              });\n              return (\n                <>\n                  <Header />\n                  <main>\n                    <div className=\"mainVideo-container\">\n                      <Video mainVideo={this.state.mainVideo} />\n                      <VideoControls mainVideo={this.state.mainVideo} />\n                    </div>\n                    <div className=\"desktop-view\">\n                      <div className=\"desktop-view__left\">\n                        <VideoInfo mainVideo={this.state.mainVideo} />\n                        <Conversation commentCount={this.state.commentCount} />\n                        <Comments comments={this.state.comments} />\n                      </div>\n                      <div className=\"desktop-view__right\">\n                        <VideoList\n                          videoList={this.state.videoList}\n                          mainVideoId={this.state.mainVideoId}\n                        />\n                      </div>\n                    </div>\n                  </main>\n                </>\n              );\n            }}\n          />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n/**\n * Functional Requirements\nClicking the BrainFlix Logo must link back to the home page.\nThere must be 3 routes:\nThe Home/Video Player Page for displaying the details of a video.\nThe Video Upload Page.\nA route which will load the video with the provided video id to be displayed using the Video Player Page.\nClicking on a video in the “Next Video” list must go to the Video Details Page for the selected video and display all the information for the video such as (likes, views, author, etc).\nClicking on the “Upload” button must link to the Video Upload Page.\n\n\nconst Home = () => <h1>Home</h1>;\nconst Images = props => {\n  const images = props.images.map(image => (\n    <Link to={`images/${image.id}`} key={image.id}>\n      <img src={image.url} alt={image.title} />\n    </Link>\n  ));\n  return images;\n};\nconst ImageDetails = props => (\n  <div>\n    <img src={props.url} alt={props.title} />\n    <h2>{props.title}</h2>\n  </div>\n);\n\nclass App extends Component {\n  state = {\n    images: [\n      {\n        id: \"1\",\n        title: \"Image 1\",\n        url: \"https://i.picsum.photos/id/237/200/300.jpg\"\n      },\n      {\n        id: \"2\",\n        title: \"Image 2\",\n        url: \"https://i.picsum.photos/id/238/200/300.jpg\"\n      },\n      {\n        id: \"3\",\n        title: \"Image 3\",\n        url: \"https://i.picsum.photos/id/239/200/300.jpg\"\n      }\n    ]\n  };\n  render() {\n    return (\n      <Router>\n        <Link to=\"/images\">Images</Link>\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route\n            path=\"/images\"\n            exact\n            render={() => <Images images={this.state.images} />}\n          />\n          <Route\n            path=\"/images/:id\"\n            render={props => {\n              const image = this.state.images.find(image => {\n                return props.match.params.id === image.id;\n              });\n              return <ImageDetails title={image.title} url={image.url} />;\n            }}\n          />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n\n */\n"]},"metadata":{},"sourceType":"module"}