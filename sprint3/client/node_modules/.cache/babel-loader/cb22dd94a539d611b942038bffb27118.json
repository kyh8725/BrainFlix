{"ast":null,"code":"var _jsxFileName = \"/Users/Daniel/Desktop/BrainStation/BrainFlix/sprint3/src/App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/header\";\nimport Comments from \"./components/comments\";\nimport Conversation from \"./components/conversation\";\nimport Video from \"./components/video\";\nimport VideoInfo from \"./components/videoInfo\";\nimport VideoList from \"./components/videoList\";\nimport VideoControls from \"./components/videoControls\";\nimport Upload from \"./components/upload\";\nimport axios from \"axios\";\nimport \"./styles/main.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nconst $url = \"https://project-2-api.herokuapp.com/videos/\";\nconst $key = \"?api_key=Daniel\";\nconst $homeKey = \"1af0jruup5gu\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videoList: [],\n      mainVideo: {},\n      commentCount: 0,\n      comments: [],\n      mainVideoId: $homeKey\n    };\n\n    this.deleteHandler = () => {\n      axios.get(`${$url}${this.state.mainVideoId}${$key}`).then(response => {\n        const mainVideo = response.data;\n        this.setState({\n          commentCount: mainVideo.comments.length\n        });\n        this.setState({\n          comments: mainVideo.comments\n        });\n      });\n    };\n\n    this.eventHandler = event => {\n      event.preventDefault();\n      const comments = event.target.commentInput.value;\n      axios.post(`${$url}${this.state.mainVideoId}/comments${$key}`, {\n        comment: comments,\n        name: \"Daniel Kim\"\n      }).then(response => {\n        axios.get(`${$url}${this.state.mainVideoId}${$key}`).then(response => {\n          const mainVideo = response.data;\n          this.setState({\n            commentCount: mainVideo.comments.length\n          });\n          this.setState({\n            comments: mainVideo.comments\n          });\n        });\n      });\n      event.target.reset();\n    };\n  }\n\n  componentDidMount() {\n    axios.get($url + $key).then(response => {\n      this.setState({\n        videoList: response.data\n      });\n      axios.get(`${$url}${$homeKey}${$key}`).then(response => {\n        const mainVideo = response.data;\n        this.setState({\n          mainVideo\n        });\n        this.setState({\n          commentCount: mainVideo.comments.length\n        });\n        this.setState({\n          comments: mainVideo.comments\n        });\n      });\n    });\n  }\n\n  componentDidUpdate(prevProp, prevState) {\n    if (prevState.mainVideoId !== this.state.mainVideoId) {\n      axios.get(`${$url}${this.state.mainVideoId}${$key}`).then(response => {\n        const mainVideo = response.data;\n        this.setState({\n          mainVideo\n        });\n        this.setState({\n          commentCount: mainVideo.comments.length\n        });\n        this.setState({\n          comments: mainVideo.comments\n        });\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/upload\",\n      render: () => {\n        return React.createElement(\"main\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(Upload, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/:id\",\n      render: props => {\n        if (props.match.params.id !== this.state.mainVideoId) {\n          this.setState({\n            mainVideoId: props.match.params.id\n          });\n        }\n\n        return React.createElement(\"main\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"mainVideo-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(Video, {\n          mainVideo: this.state.mainVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }), React.createElement(VideoControls, {\n          mainVideo: this.state.mainVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"desktop-view\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"desktop-view__left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(VideoInfo, {\n          mainVideo: this.state.mainVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }), React.createElement(Conversation, {\n          commentCount: this.state.commentCount,\n          onSubmit: this.eventHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }), React.createElement(Comments, {\n          comments: this.state.comments,\n          mainVideoId: this.state.mainVideoId,\n          deleteHandler: this.deleteHander,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"desktop-view__right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(VideoList, {\n          videoList: this.state.videoList,\n          mainVideoId: this.state.mainVideoId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }))));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: () => {\n        if ($homeKey !== this.state.mainVideoId) {\n          this.setState({\n            mainVideoId: $homeKey\n          });\n        }\n\n        return React.createElement(\"main\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"mainVideo-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(Video, {\n          mainVideo: this.state.mainVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }), React.createElement(VideoControls, {\n          mainVideo: this.state.mainVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"desktop-view\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"desktop-view__left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(VideoInfo, {\n          mainVideo: this.state.mainVideo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }), React.createElement(Conversation, {\n          commentCount: this.state.commentCount,\n          onSubmit: this.eventHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }), React.createElement(Comments, {\n          comments: this.state.comments,\n          mainVideoId: this.state.mainVideoId,\n          deleteHandler: this.deleteHander,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"desktop-view__right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, React.createElement(VideoList, {\n          videoList: this.state.videoList,\n          mainVideoId: this.state.mainVideoId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }))));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Daniel/Desktop/BrainStation/BrainFlix/sprint3/src/App.js"],"names":["React","Component","Header","Comments","Conversation","Video","VideoInfo","VideoList","VideoControls","Upload","axios","BrowserRouter","Router","Route","Switch","$url","$key","$homeKey","App","state","videoList","mainVideo","commentCount","comments","mainVideoId","deleteHandler","get","then","response","data","setState","length","eventHandler","event","preventDefault","target","commentInput","value","post","comment","name","reset","componentDidMount","componentDidUpdate","prevProp","prevState","render","props","match","params","id","deleteHander"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,MAAMC,IAAI,GAAG,6CAAb;AACA,MAAMC,IAAI,GAAG,iBAAb;AACA,MAAMC,QAAQ,GAAG,cAAjB;;AAEA,MAAMC,GAAN,SAAkBjB,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BkB,KAD0B,GAClB;AACNC,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,SAAS,EAAE,EAFL;AAGNC,MAAAA,YAAY,EAAE,CAHR;AAINC,MAAAA,QAAQ,EAAE,EAJJ;AAKNC,MAAAA,WAAW,EAAEP;AALP,KADkB;;AAAA,SAgC1BQ,aAhC0B,GAgCV,MAAM;AACpBf,MAAAA,KAAK,CAACgB,GAAN,CAAW,GAAEX,IAAK,GAAE,KAAKI,KAAL,CAAWK,WAAY,GAAER,IAAK,EAAlD,EAAqDW,IAArD,CAA0DC,QAAQ,IAAI;AACpE,cAAMP,SAAS,GAAGO,QAAQ,CAACC,IAA3B;AACA,aAAKC,QAAL,CAAc;AAAER,UAAAA,YAAY,EAAED,SAAS,CAACE,QAAV,CAAmBQ;AAAnC,SAAd;AACA,aAAKD,QAAL,CAAc;AAAEP,UAAAA,QAAQ,EAAEF,SAAS,CAACE;AAAtB,SAAd;AACD,OAJD;AAKD,KAtCyB;;AAAA,SAwC1BS,YAxC0B,GAwCXC,KAAK,IAAI;AACtBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMX,QAAQ,GAAGU,KAAK,CAACE,MAAN,CAAaC,YAAb,CAA0BC,KAA3C;AACA3B,MAAAA,KAAK,CACF4B,IADH,CACS,GAAEvB,IAAK,GAAE,KAAKI,KAAL,CAAWK,WAAY,YAAWR,IAAK,EADzD,EAC4D;AACxDuB,QAAAA,OAAO,EAAEhB,QAD+C;AAExDiB,QAAAA,IAAI,EAAE;AAFkD,OAD5D,EAKGb,IALH,CAKQC,QAAQ,IAAI;AAChBlB,QAAAA,KAAK,CAACgB,GAAN,CAAW,GAAEX,IAAK,GAAE,KAAKI,KAAL,CAAWK,WAAY,GAAER,IAAK,EAAlD,EAAqDW,IAArD,CAA0DC,QAAQ,IAAI;AACpE,gBAAMP,SAAS,GAAGO,QAAQ,CAACC,IAA3B;AACA,eAAKC,QAAL,CAAc;AAAER,YAAAA,YAAY,EAAED,SAAS,CAACE,QAAV,CAAmBQ;AAAnC,WAAd;AACA,eAAKD,QAAL,CAAc;AAAEP,YAAAA,QAAQ,EAAEF,SAAS,CAACE;AAAtB,WAAd;AACD,SAJD;AAKD,OAXH;AAYAU,MAAAA,KAAK,CAACE,MAAN,CAAaM,KAAb;AACD,KAxDyB;AAAA;;AAS1BC,EAAAA,iBAAiB,GAAG;AAClBhC,IAAAA,KAAK,CAACgB,GAAN,CAAUX,IAAI,GAAGC,IAAjB,EAAuBW,IAAvB,CAA4BC,QAAQ,IAAI;AACtC,WAAKE,QAAL,CAAc;AAAEV,QAAAA,SAAS,EAAEQ,QAAQ,CAACC;AAAtB,OAAd;AACAnB,MAAAA,KAAK,CAACgB,GAAN,CAAW,GAAEX,IAAK,GAAEE,QAAS,GAAED,IAAK,EAApC,EAAuCW,IAAvC,CAA4CC,QAAQ,IAAI;AACtD,cAAMP,SAAS,GAAGO,QAAQ,CAACC,IAA3B;AACA,aAAKC,QAAL,CAAc;AAAET,UAAAA;AAAF,SAAd;AACA,aAAKS,QAAL,CAAc;AAAER,UAAAA,YAAY,EAAED,SAAS,CAACE,QAAV,CAAmBQ;AAAnC,SAAd;AACA,aAAKD,QAAL,CAAc;AAAEP,UAAAA,QAAQ,EAAEF,SAAS,CAACE;AAAtB,SAAd;AACD,OALD;AAMD,KARD;AASD;;AAEDoB,EAAAA,kBAAkB,CAACC,QAAD,EAAWC,SAAX,EAAsB;AACtC,QAAIA,SAAS,CAACrB,WAAV,KAA0B,KAAKL,KAAL,CAAWK,WAAzC,EAAsD;AACpDd,MAAAA,KAAK,CAACgB,GAAN,CAAW,GAAEX,IAAK,GAAE,KAAKI,KAAL,CAAWK,WAAY,GAAER,IAAK,EAAlD,EAAqDW,IAArD,CAA0DC,QAAQ,IAAI;AACpE,cAAMP,SAAS,GAAGO,QAAQ,CAACC,IAA3B;AACA,aAAKC,QAAL,CAAc;AAAET,UAAAA;AAAF,SAAd;AACA,aAAKS,QAAL,CAAc;AAAER,UAAAA,YAAY,EAAED,SAAS,CAACE,QAAV,CAAmBQ;AAAnC,SAAd;AACA,aAAKD,QAAL,CAAc;AAAEP,UAAAA,QAAQ,EAAEF,SAAS,CAACE;AAAtB,SAAd;AACD,OALD;AAMD;AACF;;AA4BDuB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,MAAM,EAAE,MAAM;AACZ,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD,OARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAWE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,MAAM,EAAEC,KAAK,IAAI;AACf,YAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,EAAnB,KAA0B,KAAK/B,KAAL,CAAWK,WAAzC,EAAsD;AACpD,eAAKM,QAAL,CAAc;AAAEN,YAAAA,WAAW,EAAEuB,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC;AAAlC,WAAd;AACD;;AACD,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AAAO,UAAA,SAAS,EAAE,KAAK/B,KAAL,CAAWE,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,oBAAC,aAAD;AAAe,UAAA,SAAS,EAAE,KAAKF,KAAL,CAAWE,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADF,EAKE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAE,KAAKF,KAAL,CAAWE,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,oBAAC,YAAD;AACE,UAAA,YAAY,EAAE,KAAKF,KAAL,CAAWG,YAD3B;AAEE,UAAA,QAAQ,EAAE,KAAKU,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAME,oBAAC,QAAD;AACE,UAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWI,QADvB;AAEE,UAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWK,WAF1B;AAGE,UAAA,aAAa,EAAE,KAAK2B,YAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,CADF,EAaE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AACE,UAAA,SAAS,EAAE,KAAKhC,KAAL,CAAWC,SADxB;AAEE,UAAA,WAAW,EAAE,KAAKD,KAAL,CAAWK,WAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAbF,CALF,CADF;AA4BD,OAlCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EA+CE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,GADP;AAEE,MAAA,KAAK,MAFP;AAGE,MAAA,MAAM,EAAE,MAAM;AACZ,YAAIP,QAAQ,KAAK,KAAKE,KAAL,CAAWK,WAA5B,EAAyC;AACvC,eAAKM,QAAL,CAAc;AAAEN,YAAAA,WAAW,EAAEP;AAAf,WAAd;AACD;;AACD,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AAAO,UAAA,SAAS,EAAE,KAAKE,KAAL,CAAWE,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,oBAAC,aAAD;AAAe,UAAA,SAAS,EAAE,KAAKF,KAAL,CAAWE,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADF,EAKE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAE,KAAKF,KAAL,CAAWE,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,oBAAC,YAAD;AACE,UAAA,YAAY,EAAE,KAAKF,KAAL,CAAWG,YAD3B;AAEE,UAAA,QAAQ,EAAE,KAAKU,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAME,oBAAC,QAAD;AACE,UAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWI,QADvB;AAEE,UAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWK,WAF1B;AAGE,UAAA,aAAa,EAAE,KAAK2B,YAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,CADF,EAaE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AACE,UAAA,SAAS,EAAE,KAAKhC,KAAL,CAAWC,SADxB;AAEE,UAAA,WAAW,EAAE,KAAKD,KAAL,CAAWK,WAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAbF,CALF,CADF;AA4BD,OAnCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/CF,CAFF,CADF;AA0FD;;AArJyB;;AAuJ5B,eAAeN,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./components/header\";\nimport Comments from \"./components/comments\";\nimport Conversation from \"./components/conversation\";\nimport Video from \"./components/video\";\nimport VideoInfo from \"./components/videoInfo\";\nimport VideoList from \"./components/videoList\";\nimport VideoControls from \"./components/videoControls\";\nimport Upload from \"./components/upload\";\nimport axios from \"axios\";\nimport \"./styles/main.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nconst $url = \"https://project-2-api.herokuapp.com/videos/\";\nconst $key = \"?api_key=Daniel\";\nconst $homeKey = \"1af0jruup5gu\";\n\nclass App extends Component {\n  state = {\n    videoList: [],\n    mainVideo: {},\n    commentCount: 0,\n    comments: [],\n    mainVideoId: $homeKey\n  };\n\n  componentDidMount() {\n    axios.get($url + $key).then(response => {\n      this.setState({ videoList: response.data });\n      axios.get(`${$url}${$homeKey}${$key}`).then(response => {\n        const mainVideo = response.data;\n        this.setState({ mainVideo });\n        this.setState({ commentCount: mainVideo.comments.length });\n        this.setState({ comments: mainVideo.comments });\n      });\n    });\n  }\n\n  componentDidUpdate(prevProp, prevState) {\n    if (prevState.mainVideoId !== this.state.mainVideoId) {\n      axios.get(`${$url}${this.state.mainVideoId}${$key}`).then(response => {\n        const mainVideo = response.data;\n        this.setState({ mainVideo });\n        this.setState({ commentCount: mainVideo.comments.length });\n        this.setState({ comments: mainVideo.comments });\n      });\n    }\n  }\n\n  deleteHandler = () => {\n    axios.get(`${$url}${this.state.mainVideoId}${$key}`).then(response => {\n      const mainVideo = response.data;\n      this.setState({ commentCount: mainVideo.comments.length });\n      this.setState({ comments: mainVideo.comments });\n    });\n  };\n\n  eventHandler = event => {\n    event.preventDefault();\n    const comments = event.target.commentInput.value;\n    axios\n      .post(`${$url}${this.state.mainVideoId}/comments${$key}`, {\n        comment: comments,\n        name: \"Daniel Kim\"\n      })\n      .then(response => {\n        axios.get(`${$url}${this.state.mainVideoId}${$key}`).then(response => {\n          const mainVideo = response.data;\n          this.setState({ commentCount: mainVideo.comments.length });\n          this.setState({ comments: mainVideo.comments });\n        });\n      });\n    event.target.reset();\n  };\n\n  render() {\n    return (\n      <Router>\n        <Header />\n        <Switch>\n          <Route\n            path=\"/upload\"\n            render={() => {\n              return (\n                <main>\n                  <Upload />\n                </main>\n              );\n            }}\n          />\n          <Route\n            path=\"/:id\"\n            render={props => {\n              if (props.match.params.id !== this.state.mainVideoId) {\n                this.setState({ mainVideoId: props.match.params.id });\n              }\n              return (\n                <main>\n                  <div className=\"mainVideo-container\">\n                    <Video mainVideo={this.state.mainVideo} />\n                    <VideoControls mainVideo={this.state.mainVideo} />\n                  </div>\n                  <div className=\"desktop-view\">\n                    <div className=\"desktop-view__left\">\n                      <VideoInfo mainVideo={this.state.mainVideo} />\n                      <Conversation\n                        commentCount={this.state.commentCount}\n                        onSubmit={this.eventHandler}\n                      />\n                      <Comments\n                        comments={this.state.comments}\n                        mainVideoId={this.state.mainVideoId}\n                        deleteHandler={this.deleteHander}\n                      />\n                    </div>\n                    <div className=\"desktop-view__right\">\n                      <VideoList\n                        videoList={this.state.videoList}\n                        mainVideoId={this.state.mainVideoId}\n                      />\n                    </div>\n                  </div>\n                </main>\n              );\n            }}\n          />\n          <Route\n            path=\"/\"\n            exact\n            render={() => {\n              if ($homeKey !== this.state.mainVideoId) {\n                this.setState({ mainVideoId: $homeKey });\n              }\n              return (\n                <main>\n                  <div className=\"mainVideo-container\">\n                    <Video mainVideo={this.state.mainVideo} />\n                    <VideoControls mainVideo={this.state.mainVideo} />\n                  </div>\n                  <div className=\"desktop-view\">\n                    <div className=\"desktop-view__left\">\n                      <VideoInfo mainVideo={this.state.mainVideo} />\n                      <Conversation\n                        commentCount={this.state.commentCount}\n                        onSubmit={this.eventHandler}\n                      />\n                      <Comments\n                        comments={this.state.comments}\n                        mainVideoId={this.state.mainVideoId}\n                        deleteHandler={this.deleteHander}\n                      />\n                    </div>\n                    <div className=\"desktop-view__right\">\n                      <VideoList\n                        videoList={this.state.videoList}\n                        mainVideoId={this.state.mainVideoId}\n                      />\n                    </div>\n                  </div>\n                </main>\n              );\n            }}\n          />\n        </Switch>\n      </Router>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}